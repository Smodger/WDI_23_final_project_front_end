"use strict";function Auth(t,e){t.loginUrl=e+"/login",t.signupUrl=e+"/register",t.tokenPrefix=""}function RegisterController(t,e){function o(){t.signup(r.user).then(function(){e.go("login")})}var r=this;r.user={},r.submit=o}function LoginController(t,e){function o(){t.login(r.credentials).then(function(){e.go("usersIndex")})}var r=this;r.credentials={},r.submit=o}function googleMap(t,e,o){return{restrict:"E",replace:!0,template:'<div class="google-map"></div>',scope:{center:"=",zoom:"=",waypoints:"=",hasInfoWindows:"=",isEditable:"=",isTraceable:"="},link:function(r,n){function l(t){var n={};n.lat=t.latLng.lat(),n.lng=t.latLng.lng(),n.route_id=e.params.id,n.position=r.waypoints.length,o.save(n,function(t){r.waypoints.push(t),u(t),s()})}function s(){r.isTraceable&&(d=[],r.waypoints.forEach(function(t){d.push({lat:t.lat,lng:t.lng})}),g.setPath(d))}function i(){p.forEach(function(t){t.setMap(null)}),p=[]}function a(t){this.waypoint.lat=t.latLng.lat(),this.waypoint.lng=t.latLng.lng(),o.update(this.waypoint,function(){s()})}function u(e){var o=new t.google.maps.Marker({position:{lat:e.lat,lng:e.lng},map:c,animation:t.google.maps.Animation.DROP,draggable:r.isEditable,waypoint:e});o.addListener("dragend",a),r.hasInfoWindows&&!function(){o.addListener("mouseover",function(){n.open(c,o),p.push(o)}),o.addListener("mouseout",function(){n.close()}),o.addListener("click",function(){window.location.href="http://localhost:8000/#/routes/"+e.route.id});var r="<h1>"+e.route.title+"</h1><p>"+e.route.route_description+"</p><h5>Click the marker for route details</h5>",n=new t.google.maps.InfoWindow({content:r})}(),p.push(o)}console.log(r);var c=new t.google.maps.Map(n[0],{center:r.center,zoom:r.zoom,mapTypeId:"terrain"});c.addListener("dblclick",l);var d=[],g=new t.google.maps.Polyline({geodesic:!0,strokeColor:"#FF0000",strokeOpacity:1,strokeWeight:2,map:c});s();var p=[];r.$watch("waypoints",function(){i(),r.waypoints&&r.waypoints.forEach(u)})}}}function MainController(t,e,o){function r(){t.logout().then(function(){e.go("login")})}function n(o,r,n){(!t.isAuthenticated()&&s.includes(r.name)||"usersEdit"===r.name&&parseFloat(n.id)!==t.getPayload().id)&&(o.preventDefault(),e.go("login"))}var l=this;l.isLoggedIn=t.isAuthenticated,l.currentUser=t.getPayload();var s=["usersEdit"];o.$on("$stateChangeStart",n),l.logout=r}function Route(t,e){return new t(e+"/routes/:id",{id:"@id"},{update:{method:"PUT"}})}function Router(t,e){t.state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("routesIndex",{url:"/routes",templateUrl:"/templates/routesIndex.html",controller:"RoutesIndexController as routesIndex"}).state("routesShow",{url:"/routes/:id",templateUrl:"/templates/routesShow.html",controller:"RoutesShowController as routesShow"}).state("routesNew",{url:"/routesNew",templateUrl:"/templates.routesNew.html",controller:"RoutesNewController as routesNew"}).state("routesEdit",{url:"/routes/:id/edit",templateUrl:"/templates.routesEdit.html",controller:"RoutesEditController as routesEdit"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}),e.otherwise("/routes")}function RoutesIndexController(t){var e=this;t.query(function(t){e.all=t,e.waypoints=t.map(function(t){return t.waypoints[0]})})}function RoutesShowController(t,e){function o(){r.route.$remove(function(){e.go("RoutesIndex")})}var r=this;r.center=null,t.get(e.params,function(t){r.route=t,r.center={lat:r.route.waypoints[0].lat,lng:r.route.waypoints[0].lng}}),r.delete=o}function RoutesEditController(t,e){function o(){r.route.$update(function(){e.go("routesShow",e.params)})}var r=this;r.route=t.get(e.params),this.update=o}function UsersIndexController(t){var e=this;e.all=t.query()}function UsersShowController(t,e,o){function r(){l.user.id===s&&(l.editable=!0)}function n(){l.user.$remove(function(){e.go("usersIndex")})}var l=this,s=o.getPayload().id;l.editable=!1,t.get(e.params).$promise.then(function(t){l.user=t,r()}),l.allowUserToEdit=r,l.delete=n}function UsersEditController(t,e){function o(){r.user.$update(function(){e.go("usersShow",e.params)})}var r=this;r.user=t.get(e.params),this.update=o}function User(t,e){return new t(e+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}function Waypoint(t,e){return new t(e+"/waypoints/:id",{id:"@id"},{update:{method:"PUT"}})}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").directive("googleMap",googleMap),googleMap.$inject=["$window","$state","Waypoint"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("finalProject").factory("Route",Route),Route.$inject=["$resource","API_URL"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").controller("RoutesIndexController",RoutesIndexController).controller("RoutesShowController",RoutesShowController).controller("RoutesEditController",RoutesEditController),RoutesIndexController.$inject=["Route"],RoutesShowController.$inject=["Route","$state"],RoutesEditController.$inject=["Route","$state"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth"],UsersEditController.$inject=["User","$state"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").factory("Waypoint",Waypoint),Waypoint.$inject=["$resource","API_URL"];
//# sourceMappingURL=app.js.map
