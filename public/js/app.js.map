{"version":3,"sources":["js/app.js","js/controllers/auth.js","directives/googleMap.js","js/controllers/main.js","js/models/route.js","js/router.js","js/controllers/routes.js","js/controllers/users.js","js/models/users.js","js/models/waypoint.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","googleMap","$window","Waypoint","restrict","replace","template","scope","center","zoom","waypoints","hasInfoWindows","isEditable","isTraceable","link","$scope","element","clearMarkers","markers","forEach","marker","setMap","handleEvent","event","waypoint","lat","latLng","lng","update","console","log","map","google","maps","Map","mapTypeId","markerRoutePathWaypoints","push","routePath","Polyline","path","geodesic","strokeColor","strokeOpacity","strokeWeight","$watch","Marker","position","animation","Animation","DROP","draggable","addListener","infoWindow","open","close","window","location","href","route","id","contentString","title","route_description","InfoWindow","content","MainController","$rootScope","logout","secureState","e","toState","toParams","isAuthenticated","protectedStates","includes","name","parseFloat","getPayload","preventDefault","main","isLoggedIn","currentUser","$on","Route","$resource","method","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","RoutesIndexController","routesIndex","query","routes","all","RoutesShowController","deleteRoute","routesShow","$remove","get","params","delete","RoutesEditController","routesEdit","$update","UsersIndexController","User","usersIndex","UsersShowController","allowUserToEdit","usersShow","currentUserId","editable","deleteUser","$promise","data","UsersEditController","usersEdit","angular","module","constant","config","$inject","directive","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        // how to store current user?\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .directive('googleMap', googleMap);\n\ngoogleMap.$inject = ['$window', '$state', 'Waypoint'];\n//SET MAP\nfunction googleMap($window, $state, Waypoint) {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: '<div class=\"google-map\"></div>',\n    scope: {\n      center: '=',\n      zoom: '=',\n      waypoints: '=',\n      hasInfoWindows: '=',\n      isEditable: '=',\n      isTraceable: '='\n    },\n    link: function ($scope, element) {\n      console.log($scope);\n      const map = new $window.google.maps.Map(element[0] , {\n        center: $scope.center,\n        zoom: $scope.zoom,\n        mapTypeId: 'terrain'\n      });\n\n      const markerRoutePathWaypoints = [];\n\n      //POLYLINES\n      if($scope.isTraceable) {\n        $scope.waypoints.forEach((waypoint) => {\n          markerRoutePathWaypoints.push({ lat: waypoint.lat, lng: waypoint.lng });\n        });\n        const routePath = new $window.google.maps.Polyline({\n          path: markerRoutePathWaypoints,\n          geodesic: true,\n          strokeColor: '#FF0000',\n          strokeOpacity: 1.0,\n          strokeWeight: 2\n        });\n        routePath.setMap(map);\n      }\n      //CLEAR MARKERS\n      let markers = [];\n      function clearMarkers() {\n        markers.forEach((marker) => {\n          marker.setMap(null);\n        });\n        markers =[];\n      }\n\n      //EDIT LAT LNG FOR ROUTE EDIT\n      function handleEvent(event) {\n        this.waypoint.lat = event.latLng.lat();\n        this.waypoint.lng = event.latLng.lng();\n        Waypoint.update(this.waypoint, () => {\n          console.log('saved!');\n        });\n      }\n\n//SET MARKERS\n      $scope.$watch('waypoints', () => {\n        clearMarkers();\n        if($scope.waypoints) {\n          $scope.waypoints.forEach((waypoint) => {\n            const marker = new $window.google.maps.Marker({\n              position: { lat: waypoint.lat, lng: waypoint.lng },\n              map: map,\n              animation: $window.google.maps.Animation.DROP,\n              draggable: $scope.isEditable,\n              waypoint: waypoint\n            });\n\n            //EVENT LISTENER FOR EDIT\n            marker.addListener('dragend', handleEvent);\n\n            // ROUTE INDEX INFO WINDOW\n            if($scope.hasInfoWindows) {\n              marker.addListener('mouseover', () => {\n                infoWindow.open(map, marker);\n                markers.push(marker);\n              });\n              marker.addListener('mouseout', () => {\n                infoWindow.close();\n              });\n              marker.addListener('click', () => {\n                window.location.href = `http://localhost:8000/#/routes/${waypoint.route.id}`;\n              });\n\n              // POPULATE INFO WINDOW\n              const contentString = '<h1>' + waypoint.route.title +'</h1>' + '<p>' + waypoint.route.route_description + '</p>';\n              const infoWindow = new $window.google.maps.InfoWindow({\n                content: contentString\n              });\n            }\n          });\n        }\n      });\n    }\n  };\n}\n","\nangular.module('finalProject')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.currentUser = $auth.getPayload();\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('login');\n    });\n  }\n\n  const protectedStates = ['usersEdit'];\n\n  function secureState(e, toState, toParams) {\n\n    if((!$auth.isAuthenticated() &&\n    protectedStates.includes(toState.name)) ||\n    toState.name === 'usersEdit' && (parseFloat(toParams.id) !== $auth.getPayload().id)) {\n      e.preventDefault();\n      $state.go('login');\n    }\n  }\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n  .factory('Route', Route);\n\nRoute.$inject = ['$resource', 'API_URL'];\nfunction Route($resource, API_URL) {\n  return new $resource(`${API_URL}/routes/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('routesIndex', {\n      url: '/routes',\n      templateUrl: '/templates/routesIndex.html',\n      controller: 'RoutesIndexController as routesIndex'\n    })\n    .state('routesShow', {\n      url: '/routes/:id',\n      templateUrl: '/templates/routesShow.html',\n      controller: 'RoutesShowController as routesShow'\n    })\n    .state('routesNew', {\n      url: '/routesNew',\n      templateUrl: '/templates.routesNew.html',\n      controller: 'RoutesNewController as routesNew'\n    })\n    .state('routesEdit', {\n      url: '/routes/:id/edit',\n      templateUrl: '/templates.routesEdit.html',\n      controller: 'RoutesEditController as routesEdit'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    });\n\n  $urlRouterProvider.otherwise('/routes');\n}\n","angular.module('finalProject')\n  .controller('RoutesIndexController', RoutesIndexController)\n  .controller('RoutesShowController', RoutesShowController)\n  .controller('RoutesEditController', RoutesEditController);\n\n\nRoutesIndexController.$inject = ['Route'];\nfunction RoutesIndexController(Route) {\n  const routesIndex = this;\n  Route.query((routes) => {\n    routesIndex.all = routes;\n\n    routesIndex.waypoints = routes.map((route) => {\n      return route.waypoints[0];\n    });\n  });\n}\n\nRoutesShowController.$inject = ['Route', '$state'];\nfunction RoutesShowController(Route, $state) {\n  const routesShow = this;\n\n  routesShow.center = null;\n  Route.get($state.params, (route) => {\n    routesShow.route = route;\n    routesShow.center = { lat: routesShow.route.waypoints[0].lat, lng: routesShow.route.waypoints[0].lng };\n  });\n\n  function deleteRoute() {\n    routesShow.route.$remove(() => {\n      $state.go('RoutesIndex');\n    });\n  }\n  routesShow.delete = deleteRoute;\n}\n\nRoutesEditController.$inject = ['Route', '$state'];\nfunction RoutesEditController(Route, $state) {\n  const routesEdit = this;\n\n  routesEdit.route = Route.get($state.params);\n\n  function update() {\n    routesEdit.route.$update(() => {\n      $state.go('routesShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n  const currentUserId = $auth.getPayload().id;\n  usersShow.editable = false;\n\n// wait until data has been returned from db to run function allowUserToEdit.\n  User.get($state.params).$promise.then((data) => {\n    usersShow.user = data;\n    allowUserToEdit();\n  });\n\n//prevent logged in user editing other users\n  function allowUserToEdit() {\n    // console.log('user to edit:', usersShow.user.id);\n    // console.log('currentUser:', currentUserId);\n    if (usersShow.user.id === currentUserId) {\n      usersShow.editable = true;\n    }\n  }\n\n  usersShow.allowUserToEdit = allowUserToEdit;\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n  usersShow.delete = deleteUser;\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .factory('Waypoint', Waypoint);\n\nWaypoint.$inject = ['$resource', 'API_URL'];\nfunction Waypoint($resource, API_URL) {\n  return new $resource(`${API_URL}/waypoints/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}