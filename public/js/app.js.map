{"version":3,"sources":["js/app.js","js/controllers/auth.js","directives/googleMap.js","js/controllers/main.js","js/models/route.js","js/router.js","js/controllers/routes.js","js/controllers/users.js","js/models/users.js","js/models/waypoint.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","googleMap","$window","Waypoint","restrict","replace","template","scope","center","zoom","waypoints","hasInfoWindows","isEditable","isTraceable","link","$scope","element","addWaypoint","event","waypoint","lat","latLng","lng","route_id","params","id","position","length","save","push","createMarker","drawPolyLines","markerRoutePathWaypoints","forEach","routePath","setPath","clearMarkers","markers","marker","setMap","handleEvent","update","google","maps","Marker","map","animation","Animation","DROP","draggable","addListener","infoWindow","open","close","window","location","href","route","contentString","title","route_description","InfoWindow","content","console","log","Map","mapTypeId","Polyline","geodesic","strokeColor","strokeOpacity","strokeWeight","$watch","MainController","$rootScope","logout","secureState","e","toState","toParams","isAuthenticated","protectedStates","includes","name","parseFloat","getPayload","preventDefault","main","isLoggedIn","currentUser","$on","Route","$resource","method","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","RoutesIndexController","routesIndex","query","routes","all","RoutesShowController","deleteRoute","routesShow","$remove","get","delete","RoutesEditController","routesEdit","$update","UsersIndexController","User","usersIndex","UsersShowController","allowUserToEdit","usersShow","currentUserId","editable","deleteUser","$promise","data","UsersEditController","usersEdit","angular","module","constant","config","$inject","directive","factory"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        // how to store current user?\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .directive('googleMap', googleMap);\n\ngoogleMap.$inject = ['$window', '$state', 'Waypoint'];\n//SET MAP\nfunction googleMap($window, $state, Waypoint) {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: '<div class=\"google-map\"></div>',\n    scope: {\n      center: '=',\n      zoom: '=',\n      waypoints: '=',\n      hasInfoWindows: '=',\n      isEditable: '=',\n      isTraceable: '='\n    },\n    link: function ($scope, element) {\n      console.log($scope);\n      const map = new $window.google.maps.Map(element[0] , {\n        center: $scope.center,\n        zoom: $scope.zoom,\n        mapTypeId: 'terrain'\n      });\n\n      // Addingwaypoints and updating their position so it orders the waypoints.\n      function addWaypoint(event) {\n        const waypoint = {};\n        waypoint.lat = event.latLng.lat();\n        waypoint.lng = event.latLng.lng();\n        waypoint.route_id = $state.params.id;\n        waypoint.position = $scope.waypoints.length;\n        Waypoint.save(waypoint, (waypoint) => {\n          $scope.waypoints.push(waypoint);\n          createMarker(waypoint);\n          drawPolyLines();\n        });\n      }\n\n      map.addListener('dblclick', addWaypoint);\n\n      let markerRoutePathWaypoints = [];\n      const routePath = new $window.google.maps.Polyline({\n        geodesic: true,\n        strokeColor: '#FF0000',\n        strokeOpacity: 1.0,\n        strokeWeight: 2,\n        map: map\n      });\n\n      //POLYLINES\n      function drawPolyLines() {\n        if($scope.isTraceable) {\n          markerRoutePathWaypoints = [];\n          $scope.waypoints.forEach((waypoint) => {\n            markerRoutePathWaypoints.push({ lat: waypoint.lat, lng: waypoint.lng });\n          });\n          routePath.setPath(markerRoutePathWaypoints);\n        }\n      }\n\n      drawPolyLines();\n      //CLEAR MARKERS\n      let markers = [];\n      function clearMarkers() {\n        markers.forEach((marker) => {\n          marker.setMap(null);\n        });\n        markers =[];\n      }\n\n      //EDIT LAT LNG FOR ROUTE EDIT\n      function handleEvent(event) {\n        this.waypoint.lat = event.latLng.lat();\n        this.waypoint.lng = event.latLng.lng();\n        Waypoint.update(this.waypoint, () => {\n          // $scope.$apply();\n          drawPolyLines();\n        });\n      }\n\n      function createMarker(waypoint) {\n        const marker = new $window.google.maps.Marker({\n          position: { lat: waypoint.lat, lng: waypoint.lng },\n          map: map,\n          animation: $window.google.maps.Animation.DROP,\n          draggable: $scope.isEditable,\n          waypoint: waypoint\n        });\n\n        //EVENT LISTENER FOR EDIT\n        marker.addListener('dragend', handleEvent);\n\n        // ROUTE INDEX INFO WINDOW\n        if($scope.hasInfoWindows) {\n          marker.addListener('mouseover', () => {\n            infoWindow.open(map, marker);\n            markers.push(marker);\n          });\n          marker.addListener('mouseout', () => {\n            infoWindow.close();\n          });\n          marker.addListener('click', () => {\n            window.location.href = `http://localhost:8000/#/routes/${waypoint.route.id}`;\n          });\n\n          // POPULATE INFO WINDOW\n          const contentString = '<h1>' + waypoint.route.title +'</h1>' + '<p>' + waypoint.route.route_description + '</p><h5>Click the marker for route details</h5>';\n          const infoWindow = new $window.google.maps.InfoWindow({\n            content: contentString\n          });\n        }\n\n        markers.push(marker);\n      }\n\n//SET MARKERS\n      $scope.$watch('waypoints', () => {\n        clearMarkers();\n        if($scope.waypoints) {\n          $scope.waypoints.forEach(createMarker);\n        }\n      });\n    }\n  };\n}\n","\nangular.module('finalProject')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.currentUser = $auth.getPayload();\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('login');\n    });\n  }\n\n  const protectedStates = ['usersEdit'];\n\n  function secureState(e, toState, toParams) {\n\n    if((!$auth.isAuthenticated() &&\n    protectedStates.includes(toState.name)) ||\n    toState.name === 'usersEdit' && (parseFloat(toParams.id) !== $auth.getPayload().id)) {\n      e.preventDefault();\n      $state.go('login');\n    }\n  }\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n  .factory('Route', Route);\n\nRoute.$inject = ['$resource', 'API_URL'];\nfunction Route($resource, API_URL) {\n  return new $resource(`${API_URL}/routes/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('routesIndex', {\n      url: '/routes',\n      templateUrl: '/templates/routesIndex.html',\n      controller: 'RoutesIndexController as routesIndex'\n    })\n    .state('routesShow', {\n      url: '/routes/:id',\n      templateUrl: '/templates/routesShow.html',\n      controller: 'RoutesShowController as routesShow'\n    })\n    .state('routesNew', {\n      url: '/routesNew',\n      templateUrl: '/templates.routesNew.html',\n      controller: 'RoutesNewController as routesNew'\n    })\n    .state('routesEdit', {\n      url: '/routes/:id/edit',\n      templateUrl: '/templates.routesEdit.html',\n      controller: 'RoutesEditController as routesEdit'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    });\n\n  $urlRouterProvider.otherwise('/routes');\n}\n","angular.module('finalProject')\n  .controller('RoutesIndexController', RoutesIndexController)\n  .controller('RoutesShowController', RoutesShowController)\n  .controller('RoutesEditController', RoutesEditController);\n\n\nRoutesIndexController.$inject = ['Route'];\nfunction RoutesIndexController(Route) {\n  const routesIndex = this;\n  Route.query((routes) => {\n    routesIndex.all = routes;\n\n    routesIndex.waypoints = routes.map((route) => {\n      return route.waypoints[0];\n    });\n  });\n}\n\nRoutesShowController.$inject = ['Route', '$state'];\nfunction RoutesShowController(Route, $state) {\n  const routesShow = this;\n\n  routesShow.center = null;\n  Route.get($state.params, (route) => {\n    routesShow.route = route;\n    routesShow.center = { lat: routesShow.route.waypoints[0].lat, lng: routesShow.route.waypoints[0].lng };\n  });\n\n  function deleteRoute() {\n    routesShow.route.$remove(() => {\n      $state.go('RoutesIndex');\n    });\n  }\n  routesShow.delete = deleteRoute;\n}\n\nRoutesEditController.$inject = ['Route', '$state'];\nfunction RoutesEditController(Route, $state) {\n  const routesEdit = this;\n\n  routesEdit.route = Route.get($state.params);\n\n  function update() {\n    routesEdit.route.$update(() => {\n      $state.go('routesShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n  const currentUserId = $auth.getPayload().id;\n  usersShow.editable = false;\n\n// wait until data has been returned from db to run function allowUserToEdit.\n  User.get($state.params).$promise.then((data) => {\n    usersShow.user = data;\n    allowUserToEdit();\n  });\n\n//prevent logged in user editing other users\n  function allowUserToEdit() {\n    // console.log('user to edit:', usersShow.user.id);\n    // console.log('currentUser:', currentUserId);\n    if (usersShow.user.id === currentUserId) {\n      usersShow.editable = true;\n    }\n  }\n\n  usersShow.allowUserToEdit = allowUserToEdit;\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n  usersShow.delete = deleteUser;\n}\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .factory('Waypoint', Waypoint);\n\nWaypoint.$inject = ['$resource', 'API_URL'];\nfunction Waypoint($resource, API_URL) {\n  return new $resource(`${API_URL}/waypoints/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}